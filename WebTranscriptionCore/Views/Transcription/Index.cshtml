@model WebTranscriptionCore.TranscriptionViewModel
@*  Exemplo de componente progress Bar.  *@
<div>
	@* Outro componente que pode ser utilizado para a Slide Bar:
		Pesquisar por "Range" em https://getbootstrap.com/docs/4.1/components/forms/
		Ao pesquisar no bootstrap, alterar para a versão 3.x (opção fica no próprio site no canto superior direito).
		Exemplo aqui: https://www.w3schools.com/howto/howto_js_rangeslider.asp
	*@

	@*	Exemplo progress sem bolinha.
			<div id="progTeste" class="progress" style="background-color: lightgray;box-shadow: none;height:10px;width:80%">
				<div id="progTeste2" class="progress-bar bg-info" role="progressbar" style=" width: 50%;box-shadow: none;" aria-valuenow="50" aria-valuemin="0" aria-valuemax="100"></div>
		</div>

		//JavaScript para obter a posição clicada.
		$("#progTeste").click(function (ev) {
			console.log(ev.offsetX);
		});
	*@
</div>

@* Style para a barra de progresso do player. *@
<style>
	/*reproduzido*/
	#sliderBar .slider-selection {
		background: #428bca;
		box-shadow: none;
		border-radius: 0px;
	}
	/*bolinha*/
	#sliderBar .slider-handle {
		background: #428bca;
		box-shadow: none;
	}
	/*nãp reproduzido*/
	#sliderBar .slider-track-high {
		background-color: #cfd8dc;
		box-shadow: none;
		border-radius: 0px;
	}
</style>

@*  Audio player do Html5.  *@
<audio id="PlayerHtml5" ontimeupdate="Player_TimeUpdate()">
	<source src=@Model.AudioFileName type="audio/mpeg">
</audio>

@* Player *@
<div style="display: flex;margin:-20px -30px 0px -30px;height:70px;background-color:#212121">

	@* Botão Play/Pause. *@
	<div id="divPlay" style=";margin: 12px 0px 0px 28px;width:50px;height:50px; background-color:#428bca;border-radius:50px;text-align:center;padding: 11px 0px 0px 4px;cursor:pointer">
		<span id="PlayIcon" class="glyphicon glyphicon-play" style="color: white; font-size: 25px">
		</span>
	</div>

	@* Combo para alterar velocidade. *@
	<div style="width: 100px;padding-top:24px;text-align:center;margin-left:20px">
		<select id="cboSpeed" class="form-control" style="width:70px; border-radius:0px; padding-left: 2px;padding:0px; text-align:center;margin:0px;height:30px">
			<option value="0.5">0.5 x</option>
			<option value="0.6">0.6 x</option>
			<option value="0.7">0.7 x</option>
			<option value="0.8">0.8 x</option>
			<option value="0.9">0.9 x</option>
			<option value="1.0" selected="selected">1.0 x</option>
			<option value="1.1">1.1 x</option>
			<option value="1.2">1.2 x</option>
			<option value="1.3">1.3 x</option>
			<option value="1.4">1.4 x</option>
			<option value="1.5">1.5 x</option>
			<option value="1.6">1.6 x</option>
			<option value="1.7">1.7 x</option>
			<option value="1.8">1.8 x</option>
			<option value="1.9">1.9 x</option>
			<option value="2.0">2.0 x</option>
		</select>
	</div>

	@* Slider bar do áudio. *@
	<div style="flex-grow: 1">
		<div class="row" style="margin: 25px 35px -10px 0px;padding:-10px 30px 0px 0px">
			<div class="row">
				<div class="col-md-12">
					<input id="sliderBar" data-slider-id="sliderBar" data-slider-min="0" data-slider-step="1" data-slider-value="10" data-slider-tooltip="hide" style="box-shadow:none;width:100%" />
				</div>
			</div>
			<div class="row" style="">
				<div class="col-md-6" style="margin-top:-6px">
					<span id="span_currTime" style="color:white">00:00:00.000</span>
				</div>
				<div class="col-md-6 text-right" style="margin-top:-6px">
					<span id="span_TurnDuration" style="color:white;margin-top:-20px"></span>
				</div>
			</div>
		</div>
	</div>
</div>

<p style="margin-top:10px"></p>

<p>
	<button id="btnSave" type="button" class="btn btn-primary">Salvar</button>
	<button id="btnPause" type="button" class="btn btn-primary">Pausar</button>
	<button id="btnAccept" type="button" class="btn btn-primary">Finalizar</button>
</p>

@*  Editor de texto.  *@
<div id="page-inner">
	<div class="table-responsive">
		@Html.TextAreaFor(x => x.WebText, new { id = "txtText", style = "height:500px;visibility:hidden" })
	</div>
</div>

<p style="margin-top:10px"></p>

@*Texto anterior e posterior*@
<div class="panel-group" id="accordion" role="tablist" aria-multiselectable="true">
	<div class="panel panel-default">
		<div class="panel-heading" role="tab" style="background-color:white">
			<h4 class="panel-title">
				<a id="btnTextPrev" role="button" data-toggle="collapse" data-parent="#accordion" href="" aria-expanded="true" aria-controls="collapsePrev" style="color: black;">
					Trecho anterior
				</a>
				<img id="ImgTextPrev" style="visibility:hidden" src="~/Images/Loading.gif">
			</h4>
		</div>
		<div id="collapsePrev" class="panel-collapse collapse collapse" role="tabpanel">
			<div class="panel-body">
				<input id="txtTextPrev" style="visibility:hidden" />
			</div>
		</div>
	</div>
	<div class="panel panel-default">
		<div class="panel-heading" role="tab" style="background-color:white">
			<h4 class="panel-title">
				<a id="btnTextNext" role="button" data-toggle="collapse" data-parent="#accordion" href="" aria-expanded="true" aria-controls="collapseNext" style="color: black;">
					Trecho posterior
				</a>
				<img id="ImgTextNext" style="visibility:hidden" src="~/Images/Loading.gif">
			</h4>
		</div>
		<div id="collapseNext" class="panel-collapse collapse collapse" role="tabpanel">
			<div class="panel-body">
				<input id="txtTextNext" style="visibility:hidden" />
			</div>
		</div>
	</div>
</div>

@Html.Hidden("hfTaskId", Model.TaskId)

<script>
	$(document).ready(function () {
		var btnSaveEnabled = false;
		var saving = false;
		var changedWhileSaving = false;
		var speed = 1.0;
		var speedStr = '1.0';
		var collapsedPrev = true;
		var collapsedNext = true;
		var player = document.getElementById("PlayerHtml5");
		var progressBar = new Slider("#sliderBar", {	max : @ViewBag.TurnDuration });

		$('#title').html('@Html.Raw(ViewBag.Title)');
		$('#PlayerHtml5').hide();
		$("#btnSave").addClass("disabled");
		$("#span_TurnDuration").text('@ViewBag.TurnDurationFormated');
		$("#divPlay").click(function () { Play(true); });

		player.ontimeupdate = function () {
			var currTime = CurrTime();
			progressBar.setValue(currTime);

			var currTime2 = new Date(null);
			var milisecs = Number((currTime * 1000).toFixed(0));
			currTime2.setMilliseconds(milisecs);
			$("#span_currTime").text(currTime2.toISOString().substr(11, 12));

			if (player.currentTime >= @ViewBag.PlayerHtml5End) Pause();
		};

		player.currentTime = @ViewBag.PlayerHtml5Begin + @ViewBag.CurrentPosition;

		if (CurrTime() == 0) progressBar.setValue(0);
		setInterval(function () { Save(false, false); }, 15000);
		document.addEventListener('keydown', function (e) { ShortCuts(e); });

		if ('@ViewBag.PrevTextAllowed' == 'False')
			$("#btnTextPrev").css('color', 'currentColor').css('cursor', 'not-allowed').css('opacity', '0.5').css('text-decoration', 'none');

		if ('@ViewBag.NextTextAllowed' == 'False')
			$("#btnTextNext").css('color', 'currentColor').css('cursor', 'not-allowed').css('opacity', '0.5').css('text-decoration', 'none');

		$('#sliderBar').on('slideStart', function () { player.pause();	});

		$('#sliderBar').on('slideStop', function (e) {
			player.currentTime = @ViewBag.PlayerHtml5Begin + e.value;
			Play(false);
		});

		$('#sliderBar').on('change', function (e) {
			var newTime = @ViewBag.PlayerBeginPosition + e.value.newValue;
			var currTime2 = new Date(null);
			var milisecs = Number((newTime * 1000).toFixed(0));
			currTime2.setMilliseconds(milisecs);
			$("#span_currTime").text(currTime2.toISOString().substr(11, 12));
		});

		function CurrTime() { return player.currentTime - @ViewBag.PlayerHtml5Begin; }

		function Play(returnSecs) {
			if (player.paused) {
				var newTime = returnSecs ? (Math.max(player.currentTime - @ViewBag.PauseRewind, @ViewBag.PlayerHtml5Begin)) : player.currentTime;
				if (newTime >= @ViewBag.PlayerHtml5End) return;
				player.currentTime = newTime;
				player.play();
				$("#PlayIcon").removeClass("glyphicon-play");
				$("#PlayIcon").addClass("glyphicon-pause");
			} else {
				Pause();
			}
		}

		function Pause() {
			player.pause();
			$("#PlayIcon").removeClass("glyphicon-pause");
			$("#PlayIcon").addClass("glyphicon-play");
		}

		function EnableSave() {
			$("#btnSave").removeClass("disabled");
			$("#btnSave").text('Salvar');
			btnSaveEnabled = true;
		}

		function Save(pause, accept) {
			if (pause == false && accept == false && $("#btnSave").hasClass("disabled")) return;
			$("#btnSave").addClass("disabled");
			$("#btnSave").text('Salvando');
			saving = true;
			if (pause) tinymce.activeEditor.setMode('readonly');
			$.ajax({
				type: "POST",
				url: '@Url.Action("SaveDoc")',
				data: { id: $("#hfTaskId").val(), text: tinymce.get("txtText").getContent(), plainText: tinymce.get("txtText").getContent({format: 'text'}) },
            dataType: "text",
				success: function (_data) {
					var data = $.parseJSON(_data);
					if (!data.sucess) {
						saving = false;
						alert(data.errorMessage);
						EnableSave();
						return;
					}
					if (pause) {
						var played = $("#sliderBar .slider-selection").css('width').replace("px", "");
						var toPlay = $("#sliderBar .slider-track-high").css('width').replace("px", "");
						var progress = (((Number(played) * 100) / (Number(played) + Number(toPlay))) / 100).toFixed(3);
						var currTime = $("#span_currTime").text();
						window.location.href = '/Transcription/Pause?taskId=' + $("#hfTaskId").val() + '&progress=' + progress + '&currTime=' + currTime;
						return;
					}
					if (accept) {
						window.location.href = '/Transcription/Accept?taskId=' + $("#hfTaskId").val();
						return;
					}
					saving = false;
					if (changedWhileSaving) {
						changedWhileSaving = false;
						EnableSave();
					} else {
						$("#btnSave").text('Salvo');
						btnSaveEnabled = false;
					}
				},
				error: function () {
					saving = false;
					alert('Erro ao salvar documento.');
					EnableSave();
				}
			});
		}

		function ShortCuts(e) {
			if (e.ctrlKey == ( @ViewBag.PlayKeyCtrl == 1) && e.keyCode == @ViewBag.PlayKeyCode) {
				event.preventDefault();
				Play(true);
			}
			else if (e.ctrlKey == ( @ViewBag.BackwardKeyCtrl == 1) && e.keyCode == @ViewBag.BackwardKeyCode) {
				event.preventDefault();
				if (player.currentTime - 2 < @ViewBag.PlayerHtml5Begin) {
					player.currentTime = @ViewBag.PlayerHtml5Begin;
				} else {
					player.currentTime = player.currentTime - 2;
				}
			}
			else if (e.ctrlKey == ( @ViewBag.ForwardKeyCtrl == 1) && e.keyCode == @ViewBag.ForwardKeyCode) {
				event.preventDefault();
				if (player.currentTime + 2 >  @ViewBag.PlayerHtml5Begin + @ViewBag.TurnDuration) {
					player.currentTime = @ViewBag.PlayerHtml5Begin + @ViewBag.TurnDuration;
				} else {
					player.currentTime = player.currentTime + 2;
				}
			} else if (e.ctrlKey == ( @ViewBag.FasterKeyCtrl == 1) && e.keyCode == @ViewBag.FasterKeyCode) {
				event.preventDefault();
				if (speedStr == '2.0') return;
				speed = (Number(speed) + 0.1).toFixed(1);
				speedStr = String(speed);
				$('#cboSpeed').val(speedStr);
				player.playbackRate = speed;
			} else if (e.ctrlKey == ( @ViewBag.SlowerKeyCtrl == 1) && e.keyCode == @ViewBag.SlowerKeyCode) {
				event.preventDefault();
				if (speedStr == '0.5') return;
				speed = (Number(speed) - 0.1).toFixed(1);
				speedStr = String(speed);
				$('#cboSpeed').val(speedStr);
				player.playbackRate = speed;
			}
		}

		tinymce.init({
			selector: '#txtText',
			language: 'pt_BR',
			setup: function (editor) {
				editor.on('Paste Change Undo Redo keyup',
					function (e) {

						/* Código para salvar via CTRL + s

						//Obs: Tem um erro: Ao salvar via ctrl s, e clicar no botão de negrito, não habilita o botão de salvar.

						//Necessária esse teste, pois ao pressionar CTRL + s, quando solta a tecla s, o editor dispara novamente o evento change.
						if (e.type === 'change' && saved) {
							saved = false;
							return;
						}
						//CTRL + s
						if ((e.ctrlKey) && (e.keyCode === 83)) {
							event.preventDefault();
							saved = true;
							Save();
							return;
						}
						*/

						//necessário, para quando pressionar CTRL + (qualquer tecla), ao soltar o CTRL, ele passa por aqui novamente.
						if ((e.keyCode === 17)) return;

						if (!btnSaveEnabled)
							EnableSave();
						if (saving)
							changedWhileSaving = true;
					});

					/* Código para salvar via CTRL + s
					editor.on('keydown',
						function (e) {
							if ((e.ctrlKey) && (e.keyCode === 86)) {
								console.log('CTRL + v pressed');
								return;
							}
							if ((e.ctrlKey) && (e.keyCode === 114)) {
								console.log('CTRL + F3 pressed');
								return;
							}
							//CTRL + s
							if ((e.ctrlKey) && (e.keyCode === 83)) {
								event.preventDefault();
								return;
							}
					});
					*/

				editor.on('keydown',
					function (e) {
						ShortCuts(e);
					});

			}
		});

		$("#btnSave").click(function () {
			event.preventDefault();
			Save(false, false);
		});

		$("#btnPause").click(function () {
			Pause();
			Save(true, false);
		});

		$("#btnAccept").click(function () {
			if (confirm('Confirma finalizar a tarefa?')) {
				Pause();
				Save(false, true);
			}
		});

		$('#cboSpeed').on('change', function () {
			player.playbackRate = this.value;
			speed = this.value;
			speedStr = String(speed);
		});

		$('#btnTextPrev').on('click', function (e) {
			e.stopPropagation();
			e.preventDefault();
			if ('@ViewBag.PrevTextAllowed' == 'False') return;
			if (collapsedPrev == true) {
				collapsedPrev = false;
				$("#ImgTextPrev").css('visibility', 'visible');
				$.ajax({
					type: "POST",
					url: '@Url.Action("PrevText")',
					data: { id: $("#hfTaskId").val() },
					success: function (data) {
						$("#txtTextPrev").val(data);
								tinymce.init({
								selector: '#txtTextPrev',
								language: 'pt_BR',
								toolbar: 'false',
								menubar: 'false',
								setup: function (editor) {
												editor.on('keydown',
													function (e) {
														ShortCuts(e);
														e.preventDefault();
													});
										}
								});
						$('#collapsePrev').addClass('show');
						$("#ImgTextPrev").css('visibility', 'hidden');
						$("#txtTextPrev").css('visibility', 'visible');
					},
					error: function () {	alert('Erro ao buscar texto anterior.'); }
				});
			}
			else {
				collapsedPrev = true;
				$('#collapsePrev').removeClass('show');
			}
		})

		$('#btnTextNext').on('click', function (e) {
			e.stopPropagation();
			e.preventDefault();
			if ('@ViewBag.NextTextAllowed' == 'False') return;
			if (collapsedNext == true) {
				collapsedNext = false;
				$("#ImgTextNext").css('visibility', 'visible');
				$.ajax({
					type: "POST",
					url: '@Url.Action("NextText")',
					data: { id: $("#hfTaskId").val() },
					success: function (data) {
						$("#txtTextNext").val(data);
								tinymce.init({
								selector: '#txtTextNext',
								language: 'pt_BR',
								toolbar: 'false',
								menubar: 'false',
								setup: function (editor) {
										editor.on('keydown',
											function (e) {
												ShortCuts(e);
												e.preventDefault();
											});
									}
								});
						$('#collapseNext').addClass('show');
						$("#ImgTextNext").css('visibility', 'hidden');
						$("#txtTextNext").css('visibility', 'visible');
					},
					error: function () {	alert('Erro ao buscar texto posterior.');	}
				});
			}
			else {
				collapsedNext = true;
				$('#collapseNext').removeClass('show');
			}
		})

		
		//var currentSessionId = "";

		//GetSession();

		//function GetSession() {

		//	var url = "/Home/GetCurrentSession";
		//	$.get(url, null, function (data) {
		//		currentSessionId = data;

		//	});

		//}

		//setInterval(function () { ValidateSession(); }, 10000);

		//function ValidateSession() {

		//	var url = "/Home/VerifySession";
		//	$.get(url, null, function (data) {
		//		if (data != currentSessionId) {
		//			window.alert("Sua sessão expirou ou seu usuário foi utilizado\npara acessar a aplicação de um outro local.");
		//			window.location.href = '/User/LogOff';
		//		}
		//	});

		//}
		
		
	});
</script>